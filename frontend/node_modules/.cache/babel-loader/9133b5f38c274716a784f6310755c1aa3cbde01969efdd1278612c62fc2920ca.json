{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madha\\\\final\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport ChatWindow from './components/ChatWindow';\nimport AgentAvatar from './components/AgentAvatar';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AGENTS = [{\n  id: 'general',\n  name: 'Captain Router',\n  avatar: '👨‍✈️',\n  description: 'Intelligent routing and general assistance',\n  color: '#4A90E2',\n  capabilities: ['Route optimization', 'Multi-agent coordination', 'Context awareness']\n}, {\n  id: 'voyage_planner',\n  name: 'Voyage Planner',\n  avatar: '🧭',\n  description: 'Smart route planning with weather & optimization',\n  color: '#7ED321',\n  capabilities: ['Weather routing', 'Fuel optimization', 'What-if scenarios', 'ETA calculation']\n}, {\n  id: 'cargo_matching',\n  name: 'Cargo Matcher',\n  avatar: '📦',\n  description: 'Vessel-cargo pairing with profitability analysis',\n  color: '#F5A623',\n  capabilities: ['Cargo matching', 'Profitability estimates', 'Real-time tracking', 'Laycan optimization']\n}, {\n  id: 'market_insights',\n  name: 'Market Insights',\n  avatar: '📊',\n  description: 'Freight rates, bunker trends & market analysis',\n  color: '#D0021B',\n  capabilities: ['Market trends', 'Freight rates', 'Bunker prices', 'Benchmarking']\n}, {\n  id: 'port_intelligence',\n  name: 'Port Intelligence',\n  avatar: '⚓',\n  description: 'Port data, bunker availability & costs',\n  color: '#9013FE',\n  capabilities: ['Port information', 'Bunker ports', 'Cost analysis', 'Availability tracking']\n}, {\n  id: 'pda_management',\n  name: 'PDA Management',\n  avatar: '💰',\n  description: 'Port disbursement & cost management',\n  color: '#50E3C2',\n  capabilities: ['PDA estimates', 'Cost tracking', 'Budget management', 'Variance analysis']\n}];\n\n// Pre-defined maritime queries for quick access\nconst QUICK_QUERIES = [{\n  text: \"Plan voyage from Singapore to Rotterdam\",\n  agent: \"Voyage Planner\",\n  description: \"Route optimization with weather\"\n}, {\n  text: \"Find cargo for Panamax vessel\",\n  agent: \"Cargo Matcher\",\n  description: \"Cargo matching & profitability\"\n}, {\n  text: \"Current bunker prices in major ports\",\n  agent: \"Market Insights\",\n  description: \"Market analysis & trends\"\n}, {\n  text: \"Best bunker ports en route to Suez\",\n  agent: \"Port Intelligence\",\n  description: \"Port optimization\"\n}, {\n  text: \"Calculate PDA for Shanghai port call\",\n  agent: \"PDA Management\",\n  description: \"Cost estimation & tracking\"\n}];\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentAgent, setCurrentAgent] = useState(null);\n  const [systemStatus, setSystemStatus] = useState('connecting');\n  const [apiStatus, setApiStatus] = useState({});\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  useEffect(() => {\n    // Check system status on load\n    checkSystemStatus();\n    // Add welcome message\n    addWelcomeMessage();\n  }, []);\n  const checkSystemStatus = async () => {\n    try {\n      const response = await fetch('/api/status');\n      const data = await response.json();\n      setSystemStatus(data.status);\n      setApiStatus(data.apis || {});\n    } catch (error) {\n      setSystemStatus('error');\n      console.error('System status check failed:', error);\n    }\n  };\n  const addWelcomeMessage = () => {\n    const welcomeMessage = {\n      id: Date.now(),\n      text: \"🚢 Welcome to IME Hub Maritime AI Assistant! I'm your intelligent maritime operations companion. I can help you with:\\n\\n\" + \"• 🧭 **Smart Voyage Planning** - Route optimization, weather routing, fuel optimization\\n\" + \"• 📦 **Cargo Matching** - Vessel-cargo pairing with profitability analysis\\n\" + \"• 📊 **Market Insights** - Freight rates, bunker trends, market analysis\\n\" + \"• ⚓ **Port Intelligence** - Port data, bunker availability, cost analysis\\n\" + \"• 💰 **PDA Management** - Port disbursement estimates and cost tracking\\n\\n\" + \"Try asking me about voyage planning, cargo matching, or any maritime operation!\",\n      sender: 'agent',\n      agent: 'Captain Router',\n      data: {\n        type: 'welcome',\n        capabilities: AGENTS.map(a => a.name)\n      },\n      timestamp: new Date().toISOString()\n    };\n    setMessages([welcomeMessage]);\n  };\n  const sendMessage = async (message, useContext = true) => {\n    if (!message.trim()) return;\n    const userMessage = {\n      id: Date.now(),\n      text: message,\n      sender: 'user',\n      timestamp: new Date().toISOString()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setIsLoading(true);\n    try {\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: message,\n          user_id: 'default',\n          use_context: useContext,\n          timestamp: new Date().toISOString()\n        })\n      });\n      const data = await response.json();\n      if (data.status === 'success') {\n        const agentMessage = {\n          id: Date.now() + 1,\n          text: data.text,\n          sender: 'agent',\n          agent: data.agent,\n          data: data.data,\n          intent: data.intent,\n          confidence: data.confidence,\n          entities: data.entities,\n          timestamp: new Date().toISOString()\n        };\n        setMessages(prev => [...prev, agentMessage]);\n        setCurrentAgent(data.agent);\n      } else {\n        const errorMessage = {\n          id: Date.now() + 1,\n          text: data.text || 'An error occurred. Please try again.',\n          sender: 'agent',\n          agent: 'Captain Router',\n          data: data.data,\n          timestamp: new Date().toISOString()\n        };\n        setMessages(prev => [...prev, errorMessage]);\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      const errorMessage = {\n        id: Date.now() + 1,\n        text: 'Sorry, I encountered an error. Please try again.',\n        sender: 'agent',\n        agent: 'Captain Router',\n        data: {\n          error: error.message\n        },\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleQuickQuery = query => {\n    sendMessage(query.text);\n    setCurrentAgent(query.agent);\n  };\n  const clearChat = () => {\n    setMessages([]);\n    setCurrentAgent(null);\n    addWelcomeMessage();\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case 'operational':\n        return '#7ED321';\n      case 'degraded':\n        return '#F5A623';\n      case 'error':\n        return '#D0021B';\n      default:\n        return '#9B9B9B';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83D\\uDEA2 IME Hub Maritime AI Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Phase 3: Advanced Maritime AI with Real-time Data & LLM Reasoning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"system-status\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `status-indicator ${systemStatus}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-text\",\n          children: [\"System: \", systemStatus === 'operational' ? '🟢 Operational' : systemStatus === 'degraded' ? '🟡 Degraded' : systemStatus === 'error' ? '🔴 Error' : '⚪ Connecting...']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"agents-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83E\\uDD16 AI Agents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"agents-grid\",\n          children: AGENTS.map(agent => /*#__PURE__*/_jsxDEV(AgentAvatar, {\n            agent: agent,\n            isActive: currentAgent === agent.name,\n            onClick: () => setCurrentAgent(agent.name)\n          }, agent.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quick-queries\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uD83D\\uDE80 Quick Queries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), QUICK_QUERIES.map((query, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"quick-query-btn\",\n            onClick: () => handleQuickQuery(query),\n            title: query.description,\n            children: query.text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-chat-btn\",\n          onClick: clearChat,\n          children: \"\\uD83D\\uDDD1\\uFE0F Clear Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-main\",\n        children: /*#__PURE__*/_jsxDEV(ChatWindow, {\n          messages: messages,\n          onSendMessage: sendMessage,\n          isLoading: isLoading,\n          currentAgent: currentAgent,\n          systemStatus: systemStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZrvtcIwH2IOw/aszamCia7LRq/8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ChatWindow","AgentAvatar","jsxDEV","_jsxDEV","AGENTS","id","name","avatar","description","color","capabilities","QUICK_QUERIES","text","agent","App","_s","messages","setMessages","isLoading","setIsLoading","currentAgent","setCurrentAgent","systemStatus","setSystemStatus","apiStatus","setApiStatus","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","checkSystemStatus","addWelcomeMessage","response","fetch","data","json","status","apis","error","console","welcomeMessage","Date","now","sender","type","map","a","timestamp","toISOString","sendMessage","message","useContext","trim","userMessage","prev","method","headers","body","JSON","stringify","user_id","use_context","agentMessage","intent","confidence","entities","errorMessage","handleQuickQuery","query","clearChat","getStatusColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isActive","onClick","index","title","onSendMessage","ref","_c","$RefreshReg$"],"sources":["C:/Users/madha/final/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport ChatWindow from './components/ChatWindow';\r\nimport AgentAvatar from './components/AgentAvatar';\r\nimport './App.css';\r\n\r\nconst AGENTS = [\r\n  {\r\n    id: 'general',\r\n    name: 'Captain Router',\r\n    avatar: '👨‍✈️',\r\n    description: 'Intelligent routing and general assistance',\r\n    color: '#4A90E2',\r\n    capabilities: ['Route optimization', 'Multi-agent coordination', 'Context awareness']\r\n  },\r\n  {\r\n    id: 'voyage_planner',\r\n    name: 'Voyage Planner',\r\n    avatar: '🧭',\r\n    description: 'Smart route planning with weather & optimization',\r\n    color: '#7ED321',\r\n    capabilities: ['Weather routing', 'Fuel optimization', 'What-if scenarios', 'ETA calculation']\r\n  },\r\n  {\r\n    id: 'cargo_matching',\r\n    name: 'Cargo Matcher',\r\n    avatar: '📦',\r\n    description: 'Vessel-cargo pairing with profitability analysis',\r\n    color: '#F5A623',\r\n    capabilities: ['Cargo matching', 'Profitability estimates', 'Real-time tracking', 'Laycan optimization']\r\n  },\r\n  {\r\n    id: 'market_insights',\r\n    name: 'Market Insights',\r\n    avatar: '📊',\r\n    description: 'Freight rates, bunker trends & market analysis',\r\n    color: '#D0021B',\r\n    capabilities: ['Market trends', 'Freight rates', 'Bunker prices', 'Benchmarking']\r\n  },\r\n  {\r\n    id: 'port_intelligence',\r\n    name: 'Port Intelligence',\r\n    avatar: '⚓',\r\n    description: 'Port data, bunker availability & costs',\r\n    color: '#9013FE',\r\n    capabilities: ['Port information', 'Bunker ports', 'Cost analysis', 'Availability tracking']\r\n  },\r\n  {\r\n    id: 'pda_management',\r\n    name: 'PDA Management',\r\n    avatar: '💰',\r\n    description: 'Port disbursement & cost management',\r\n    color: '#50E3C2',\r\n    capabilities: ['PDA estimates', 'Cost tracking', 'Budget management', 'Variance analysis']\r\n  }\r\n];\r\n\r\n// Pre-defined maritime queries for quick access\r\nconst QUICK_QUERIES = [\r\n  {\r\n    text: \"Plan voyage from Singapore to Rotterdam\",\r\n    agent: \"Voyage Planner\",\r\n    description: \"Route optimization with weather\"\r\n  },\r\n  {\r\n    text: \"Find cargo for Panamax vessel\",\r\n    agent: \"Cargo Matcher\", \r\n    description: \"Cargo matching & profitability\"\r\n  },\r\n  {\r\n    text: \"Current bunker prices in major ports\",\r\n    agent: \"Market Insights\",\r\n    description: \"Market analysis & trends\"\r\n  },\r\n  {\r\n    text: \"Best bunker ports en route to Suez\",\r\n    agent: \"Port Intelligence\",\r\n    description: \"Port optimization\"\r\n  },\r\n  {\r\n    text: \"Calculate PDA for Shanghai port call\",\r\n    agent: \"PDA Management\",\r\n    description: \"Cost estimation & tracking\"\r\n  }\r\n];\r\n\r\nfunction App() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [currentAgent, setCurrentAgent] = useState(null);\r\n  const [systemStatus, setSystemStatus] = useState('connecting');\r\n  const [apiStatus, setApiStatus] = useState({});\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    // Check system status on load\r\n    checkSystemStatus();\r\n    // Add welcome message\r\n    addWelcomeMessage();\r\n  }, []);\r\n\r\n  const checkSystemStatus = async () => {\r\n    try {\r\n      const response = await fetch('/api/status');\r\n      const data = await response.json();\r\n      setSystemStatus(data.status);\r\n      setApiStatus(data.apis || {});\r\n    } catch (error) {\r\n      setSystemStatus('error');\r\n      console.error('System status check failed:', error);\r\n    }\r\n  };\r\n\r\n  const addWelcomeMessage = () => {\r\n    const welcomeMessage = {\r\n      id: Date.now(),\r\n      text: \"🚢 Welcome to IME Hub Maritime AI Assistant! I'm your intelligent maritime operations companion. I can help you with:\\n\\n\" +\r\n            \"• 🧭 **Smart Voyage Planning** - Route optimization, weather routing, fuel optimization\\n\" +\r\n            \"• 📦 **Cargo Matching** - Vessel-cargo pairing with profitability analysis\\n\" +\r\n            \"• 📊 **Market Insights** - Freight rates, bunker trends, market analysis\\n\" +\r\n            \"• ⚓ **Port Intelligence** - Port data, bunker availability, cost analysis\\n\" +\r\n            \"• 💰 **PDA Management** - Port disbursement estimates and cost tracking\\n\\n\" +\r\n            \"Try asking me about voyage planning, cargo matching, or any maritime operation!\",\r\n      sender: 'agent',\r\n      agent: 'Captain Router',\r\n      data: { type: 'welcome', capabilities: AGENTS.map(a => a.name) },\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    setMessages([welcomeMessage]);\r\n  };\r\n\r\n  const sendMessage = async (message, useContext = true) => {\r\n    if (!message.trim()) return;\r\n\r\n    const userMessage = {\r\n      id: Date.now(),\r\n      text: message,\r\n      sender: 'user',\r\n      timestamp: new Date().toISOString()\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await fetch('/api/chat', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          message: message,\r\n          user_id: 'default',\r\n          use_context: useContext,\r\n          timestamp: new Date().toISOString()\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.status === 'success') {\r\n        const agentMessage = {\r\n          id: Date.now() + 1,\r\n          text: data.text,\r\n          sender: 'agent',\r\n          agent: data.agent,\r\n          data: data.data,\r\n          intent: data.intent,\r\n          confidence: data.confidence,\r\n          entities: data.entities,\r\n          timestamp: new Date().toISOString()\r\n        };\r\n\r\n        setMessages(prev => [...prev, agentMessage]);\r\n        setCurrentAgent(data.agent);\r\n      } else {\r\n        const errorMessage = {\r\n          id: Date.now() + 1,\r\n          text: data.text || 'An error occurred. Please try again.',\r\n          sender: 'agent',\r\n          agent: 'Captain Router',\r\n          data: data.data,\r\n          timestamp: new Date().toISOString()\r\n        };\r\n\r\n        setMessages(prev => [...prev, errorMessage]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n      const errorMessage = {\r\n        id: Date.now() + 1,\r\n        text: 'Sorry, I encountered an error. Please try again.',\r\n        sender: 'agent',\r\n        agent: 'Captain Router',\r\n        data: { error: error.message },\r\n        timestamp: new Date().toISOString()\r\n      };\r\n\r\n      setMessages(prev => [...prev, errorMessage]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleQuickQuery = (query) => {\r\n    sendMessage(query.text);\r\n    setCurrentAgent(query.agent);\r\n  };\r\n\r\n  const clearChat = () => {\r\n    setMessages([]);\r\n    setCurrentAgent(null);\r\n    addWelcomeMessage();\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'operational': return '#7ED321';\r\n      case 'degraded': return '#F5A623';\r\n      case 'error': return '#D0021B';\r\n      default: return '#9B9B9B';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>🚢 IME Hub Maritime AI Assistant</h1>\r\n        <p>Phase 3: Advanced Maritime AI with Real-time Data & LLM Reasoning</p>\r\n        <div className=\"system-status\">\r\n          <span className={`status-indicator ${systemStatus}`}></span>\r\n          <span className=\"status-text\">\r\n            System: {systemStatus === 'operational' ? '🟢 Operational' : \r\n                    systemStatus === 'degraded' ? '🟡 Degraded' : \r\n                    systemStatus === 'error' ? '🔴 Error' : '⚪ Connecting...'}\r\n          </span>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"App-container\">\r\n        <div className=\"agents-sidebar\">\r\n          <h3>🤖 AI Agents</h3>\r\n          <div className=\"agents-grid\">\r\n            {AGENTS.map(agent => (\r\n              <AgentAvatar\r\n                key={agent.id}\r\n                agent={agent}\r\n                isActive={currentAgent === agent.name}\r\n                onClick={() => setCurrentAgent(agent.name)}\r\n              />\r\n            ))}\r\n          </div>\r\n          \r\n          <div className=\"quick-queries\">\r\n            <h4>🚀 Quick Queries</h4>\r\n            {QUICK_QUERIES.map((query, index) => (\r\n              <button\r\n                key={index}\r\n                className=\"quick-query-btn\"\r\n                onClick={() => handleQuickQuery(query)}\r\n                title={query.description}\r\n              >\r\n                {query.text}\r\n              </button>\r\n            ))}\r\n          </div>\r\n\r\n          <button className=\"clear-chat-btn\" onClick={clearChat}>\r\n            🗑️ Clear Chat\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"chat-main\">\r\n          <ChatWindow\r\n            messages={messages}\r\n            onSendMessage={sendMessage}\r\n            isLoading={isLoading}\r\n            currentAgent={currentAgent}\r\n            systemStatus={systemStatus}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div ref={messagesEndRef} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}