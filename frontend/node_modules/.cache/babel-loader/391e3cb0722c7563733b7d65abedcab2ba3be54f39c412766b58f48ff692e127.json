{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madha\\\\final\\\\frontend\\\\src\\\\components\\\\ChatWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './ChatWindow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = ({\n  messages,\n  onSendMessage,\n  isLoading,\n  currentAgent,\n  systemStatus,\n  conversationContext,\n  uploadedDocuments\n}) => {\n  _s();\n  const [inputMessage, setInputMessage] = useState('');\n  const inputRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    var _inputRef$current;\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  }, []);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputMessage.trim() && !isLoading) {\n      onSendMessage(inputMessage);\n      setInputMessage('');\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      handleSubmit(e);\n    }\n  };\n  const formatTimestamp = timestamp => {\n    return new Date(timestamp).toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const renderMessage = message => {\n    const isUser = message.sender === 'user';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message-container ${isUser ? 'user-message' : 'agent-message'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-avatar\",\n        children: isUser ? 'ğŸ‘¤' : 'ğŸ¤–'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-sender\",\n            children: isUser ? 'You' : message.agent || 'AI Assistant'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-time\",\n            children: formatTimestamp(message.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-text\",\n          children: typeof message.text === 'string' ? message.text.split('\\n').map((line, index) => {\n            // Handle markdown-like formatting\n            if (line.includes('**') && line.includes('**')) {\n              // Bold text\n              const parts = line.split('**');\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-line\",\n                children: parts.map((part, partIndex) => partIndex % 2 === 1 ? /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: part\n                }, partIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 29\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: part\n                }, partIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 29\n                }, this))\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 23\n              }, this);\n            } else if (line.startsWith('ğŸš¢') || line.startsWith('ğŸ“Š') || line.startsWith('ğŸ“¦')) {\n              // Emoji headers\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-line emoji-header\",\n                children: line\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 28\n              }, this);\n            } else if (line.startsWith('â€¢')) {\n              // Bullet points\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-line bullet-point\",\n                children: line\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 28\n              }, this);\n            } else if (line.match(/^\\d+\\./)) {\n              // Numbered lists\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-line numbered-list\",\n                children: line\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 28\n              }, this);\n            } else if (line.trim() === '') {\n              // Empty lines for spacing\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-line empty-line\",\n                children: \"\\xA0\"\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 28\n              }, this);\n            } else {\n              // Regular text\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-line\",\n                children: line\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 28\n              }, this);\n            }\n          }) : typeof message.text === 'object' ? JSON.stringify(message.text, null, 2) : String(message.text || '')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), message.confidence && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-meta\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `confidence-badge ${getConfidenceClass(message.confidence)}`,\n            children: [\"Confidence: \", (message.confidence * 100).toFixed(1), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), message.intent && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-meta\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `intent-badge ${getIntentClass(message.confidence)}`,\n            children: [\"Intent: \", message.intent]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), message.hasDetailedData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-meta\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"show-details-btn\",\n            onClick: () => handleShowDetails(message),\n            children: \"\\uD83D\\uDCCB Show Full Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, message.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  };\n  const handleShowDetails = message => {\n    if (message.data && Object.keys(message.data).length > 0) {\n      // Create a detailed view of the data\n      let detailedText = message.text + '\\n\\n' + 'ğŸ“‹ **FULL DETAILS:**\\n\\n';\n      if (message.data.document_analysis) {\n        const analysis = message.data.document_analysis;\n        if (analysis.analysis) {\n          // This is a Gemini AI response - show the full analysis\n          detailedText = `ğŸ“„ **Complete Document Analysis by Gemini AI**\\n\\n`;\n          detailedText += analysis.analysis;\n          if (analysis.documents_analyzed) {\n            detailedText += `\\n\\n**Documents Analyzed:** ${analysis.documents_analyzed}`;\n          }\n        } else {\n          // Show structured document analysis\n          detailedText += `ğŸ“„ **Document Analysis Details:**\\n\\n`;\n          if (analysis.summary) {\n            detailedText += `**Summary:** ${analysis.summary}\\n\\n`;\n          }\n          if (analysis.key_points && analysis.key_points.length > 0) {\n            detailedText += `**All Key Points:**\\n`;\n            analysis.key_points.forEach((point, index) => {\n              detailedText += `${index + 1}. ${point}\\n`;\n            });\n            detailedText += `\\n`;\n          }\n          if (analysis.terms && analysis.terms.length > 0) {\n            detailedText += `**All Terms and Conditions:**\\n`;\n            analysis.terms.forEach((term, index) => {\n              detailedText += `${index + 1}. ${term}\\n`;\n            });\n            detailedText += `\\n`;\n          }\n          if (analysis.actions && analysis.actions.length > 0) {\n            detailedText += `**All Required Actions:**\\n`;\n            analysis.actions.forEach((action, index) => {\n              detailedText += `${index + 1}. ${action}\\n`;\n            });\n          }\n        }\n      } else if (message.data.voyage_plan) {\n        const plan = message.data.voyage_plan;\n\n        // Show all route options\n        if (plan.route_options && plan.route_options.length > 0) {\n          detailedText += `**All Route Options:**\\n`;\n          plan.route_options.forEach((route, index) => {\n            var _route$advantages, _route$disadvantages;\n            detailedText += `${index + 1}. **${route.name}**\\n`;\n            detailedText += `   â€¢ Distance: ${route.distance} NM\\n`;\n            detailedText += `   â€¢ Duration: ${route.duration} days\\n`;\n            detailedText += `   â€¢ Fuel: ${route.fuel_consumption} MT\\n`;\n            detailedText += `   â€¢ Canal: ${route.canal || 'None'}\\n`;\n            detailedText += `   â€¢ Advantages: ${((_route$advantages = route.advantages) === null || _route$advantages === void 0 ? void 0 : _route$advantages.join(', ')) || 'N/A'}\\n`;\n            detailedText += `   â€¢ Disadvantages: ${((_route$disadvantages = route.disadvantages) === null || _route$disadvantages === void 0 ? void 0 : _route$disadvantages.join(', ')) || 'N/A'}\\n\\n`;\n          });\n        }\n\n        // Show all cost analysis\n        if (plan.cost_analysis) {\n          detailedText += `**Complete Cost Analysis:**\\n`;\n          Object.entries(plan.cost_analysis).forEach(([route, costs]) => {\n            if (typeof costs === 'object' && costs.total_cost) {\n              var _costs$total_cost, _costs$fuel_cost, _costs$canal_fee, _costs$port_charges, _costs$cost_per_day;\n              detailedText += `**${route}:**\\n`;\n              detailedText += `   â€¢ Total Cost: $${((_costs$total_cost = costs.total_cost) === null || _costs$total_cost === void 0 ? void 0 : _costs$total_cost.toLocaleString()) || 'N/A'}\\n`;\n              detailedText += `   â€¢ Fuel Cost: $${((_costs$fuel_cost = costs.fuel_cost) === null || _costs$fuel_cost === void 0 ? void 0 : _costs$fuel_cost.toLocaleString()) || 'N/A'}\\n`;\n              detailedText += `   â€¢ Canal Fee: $${((_costs$canal_fee = costs.canal_fee) === null || _costs$canal_fee === void 0 ? void 0 : _costs$canal_fee.toLocaleString()) || 'N/A'}\\n`;\n              detailedText += `   â€¢ Port Charges: $${((_costs$port_charges = costs.port_charges) === null || _costs$port_charges === void 0 ? void 0 : _costs$port_charges.toLocaleString()) || 'N/A'}\\n`;\n              detailedText += `   â€¢ Cost per Day: $${((_costs$cost_per_day = costs.cost_per_day) === null || _costs$cost_per_day === void 0 ? void 0 : _costs$cost_per_day.toLocaleString()) || 'N/A'}\\n\\n`;\n            }\n          });\n        }\n\n        // Show what-if scenarios\n        if (plan.what_if_scenarios && plan.what_if_scenarios.length > 0) {\n          detailedText += `**What-If Scenarios:**\\n`;\n          plan.what_if_scenarios.forEach((scenario, index) => {\n            detailedText += `${index + 1}. **${scenario.scenario}**\\n`;\n            if (scenario.impact) {\n              Object.entries(scenario.impact).forEach(([key, value]) => {\n                detailedText += `   â€¢ ${key.replace(/_/g, ' ').toUpperCase()}: ${value}\\n`;\n              });\n            }\n            if (scenario.recommendation) {\n              detailedText += `   â€¢ Recommendation: ${scenario.recommendation}\\n`;\n            }\n            detailedText += `\\n`;\n          });\n        }\n      }\n\n      // Update the message with detailed text\n      message.text = detailedText;\n      message.hasDetailedData = false; // Hide the button after showing details\n\n      // Force re-render\n      const updatedMessages = messages.map(msg => msg.id === message.id ? message : msg);\n      // Note: This would need to be passed down from parent component\n      // For now, we'll just show an alert with the details\n      alert('Full details:\\n\\n' + detailedText);\n    }\n  };\n  const getConfidenceClass = confidence => {\n    if (confidence >= 0.8) return 'confidence-high';\n    if (confidence >= 0.6) return 'confidence-medium';\n    return 'confidence-low';\n  };\n  const getIntentClass = confidence => {\n    if (confidence >= 0.8) return 'intent-high';\n    if (confidence >= 0.6) return 'intent-medium';\n    return 'intent-low';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-area\",\n      children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-icon\",\n          children: \"\\uD83D\\uDEA2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Welcome to IME Hub Maritime AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Start a conversation to get maritime insights and assistance.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this) : messages.map(renderMessage), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-container agent-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-avatar\",\n          children: \"\\uD83E\\uDD16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-header\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-sender\",\n              children: currentAgent || 'AI Assistant'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"input-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: inputRef,\n            value: inputMessage,\n            onChange: e => setInputMessage(e.target.value),\n            onKeyPress: handleKeyPress,\n            placeholder: \"Ask me anything about maritime operations, voyage planning, cargo matching, market insights, port intelligence, or PDA management...\",\n            className: \"message-input\",\n            rows: 1,\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"send-button\",\n            disabled: !inputMessage.trim() || isLoading,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"24\",\n              height: \"24\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M22 2L11 13\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M22 2L15 22L11 13L2 9L22 2Z\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"input-hint\",\n            children: \"Press Enter to send, Shift+Enter for new line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"fasa5MfF2aWWG8fcY8ezsv8TYsM=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","ChatWindow","messages","onSendMessage","isLoading","currentAgent","systemStatus","conversationContext","uploadedDocuments","_s","inputMessage","setInputMessage","inputRef","messagesEndRef","_inputRef$current","current","focus","scrollToBottom","_messagesEndRef$curre","scrollIntoView","behavior","handleSubmit","e","preventDefault","trim","handleKeyPress","key","shiftKey","formatTimestamp","timestamp","Date","toLocaleTimeString","hour","minute","renderMessage","message","isUser","sender","className","children","fileName","_jsxFileName","lineNumber","columnNumber","agent","text","split","map","line","index","includes","parts","part","partIndex","startsWith","match","JSON","stringify","String","confidence","getConfidenceClass","toFixed","intent","getIntentClass","hasDetailedData","onClick","handleShowDetails","id","data","Object","keys","length","detailedText","document_analysis","analysis","documents_analyzed","summary","key_points","forEach","point","terms","term","actions","action","voyage_plan","plan","route_options","route","_route$advantages","_route$disadvantages","name","distance","duration","fuel_consumption","canal","advantages","join","disadvantages","cost_analysis","entries","costs","total_cost","_costs$total_cost","_costs$fuel_cost","_costs$canal_fee","_costs$port_charges","_costs$cost_per_day","toLocaleString","fuel_cost","canal_fee","port_charges","cost_per_day","what_if_scenarios","scenario","impact","value","replace","toUpperCase","recommendation","updatedMessages","msg","alert","ref","onSubmit","onChange","target","onKeyPress","placeholder","rows","disabled","type","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","_c","$RefreshReg$"],"sources":["C:/Users/madha/final/frontend/src/components/ChatWindow.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './ChatWindow.css';\r\n\r\nconst ChatWindow = ({ messages, onSendMessage, isLoading, currentAgent, systemStatus, conversationContext, uploadedDocuments }) => {\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const inputRef = useRef(null);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current?.focus();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputMessage.trim() && !isLoading) {\r\n      onSendMessage(inputMessage);\r\n      setInputMessage('');\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      handleSubmit(e);\r\n    }\r\n  };\r\n\r\n  const formatTimestamp = (timestamp) => {\r\n    return new Date(timestamp).toLocaleTimeString([], { \r\n      hour: '2-digit', \r\n      minute: '2-digit' \r\n    });\r\n  };\r\n\r\n  const renderMessage = (message) => {\r\n    const isUser = message.sender === 'user';\r\n    \r\n    return (\r\n      <div key={message.id} className={`message-container ${isUser ? 'user-message' : 'agent-message'}`}>\r\n        <div className=\"message-avatar\">\r\n          {isUser ? 'ğŸ‘¤' : 'ğŸ¤–'}\r\n        </div>\r\n        <div className=\"message-content\">\r\n          <div className=\"message-header\">\r\n            <span className=\"message-sender\">\r\n              {isUser ? 'You' : message.agent || 'AI Assistant'}\r\n            </span>\r\n            <span className=\"message-time\">\r\n              {formatTimestamp(message.timestamp)}\r\n            </span>\r\n          </div>\r\n          <div className=\"message-text\">\r\n            {typeof message.text === 'string'\r\n              ? message.text.split('\\n').map((line, index) => {\r\n                  // Handle markdown-like formatting\r\n                  if (line.includes('**') && line.includes('**')) {\r\n                    // Bold text\r\n                    const parts = line.split('**');\r\n                    return (\r\n                      <div key={index} className=\"message-line\">\r\n                        {parts.map((part, partIndex) => \r\n                          partIndex % 2 === 1 ? \r\n                            <strong key={partIndex}>{part}</strong> : \r\n                            <span key={partIndex}>{part}</span>\r\n                        )}\r\n                      </div>\r\n                    );\r\n                  } else if (line.startsWith('ğŸš¢') || line.startsWith('ğŸ“Š') || line.startsWith('ğŸ“¦')) {\r\n                    // Emoji headers\r\n                    return <div key={index} className=\"message-line emoji-header\">{line}</div>;\r\n                  } else if (line.startsWith('â€¢')) {\r\n                    // Bullet points\r\n                    return <div key={index} className=\"message-line bullet-point\">{line}</div>;\r\n                  } else if (line.match(/^\\d+\\./)) {\r\n                    // Numbered lists\r\n                    return <div key={index} className=\"message-line numbered-list\">{line}</div>;\r\n                  } else if (line.trim() === '') {\r\n                    // Empty lines for spacing\r\n                    return <div key={index} className=\"message-line empty-line\">&nbsp;</div>;\r\n                  } else {\r\n                    // Regular text\r\n                    return <div key={index} className=\"message-line\">{line}</div>;\r\n                  }\r\n                })\r\n              : typeof message.text === 'object'\r\n                ? JSON.stringify(message.text, null, 2)\r\n                : String(message.text || '')\r\n            }\r\n          </div>\r\n          \r\n          {/* Show confidence and intent if available */}\r\n          {message.confidence && (\r\n            <div className=\"message-meta\">\r\n              <span className={`confidence-badge ${getConfidenceClass(message.confidence)}`}>\r\n                Confidence: {(message.confidence * 100).toFixed(1)}%\r\n              </span>\r\n            </div>\r\n          )}\r\n          \r\n          {message.intent && (\r\n            <div className=\"message-meta\">\r\n              <span className={`intent-badge ${getIntentClass(message.confidence)}`}>\r\n                Intent: {message.intent}\r\n              </span>\r\n            </div>\r\n          )}\r\n          \r\n          {/* Show More Details button for messages with detailed data */}\r\n          {message.hasDetailedData && (\r\n            <div className=\"message-meta\">\r\n              <button \r\n                className=\"show-details-btn\"\r\n                onClick={() => handleShowDetails(message)}\r\n              >\r\n                ğŸ“‹ Show Full Details\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleShowDetails = (message) => {\r\n    if (message.data && Object.keys(message.data).length > 0) {\r\n      // Create a detailed view of the data\r\n      let detailedText = message.text + '\\n\\n' + 'ğŸ“‹ **FULL DETAILS:**\\n\\n';\r\n      \r\n      if (message.data.document_analysis) {\r\n        const analysis = message.data.document_analysis;\r\n        \r\n        if (analysis.analysis) {\r\n          // This is a Gemini AI response - show the full analysis\r\n          detailedText = `ğŸ“„ **Complete Document Analysis by Gemini AI**\\n\\n`;\r\n          detailedText += analysis.analysis;\r\n          \r\n          if (analysis.documents_analyzed) {\r\n            detailedText += `\\n\\n**Documents Analyzed:** ${analysis.documents_analyzed}`;\r\n          }\r\n        } else {\r\n          // Show structured document analysis\r\n          detailedText += `ğŸ“„ **Document Analysis Details:**\\n\\n`;\r\n          \r\n          if (analysis.summary) {\r\n            detailedText += `**Summary:** ${analysis.summary}\\n\\n`;\r\n          }\r\n          \r\n          if (analysis.key_points && analysis.key_points.length > 0) {\r\n            detailedText += `**All Key Points:**\\n`;\r\n            analysis.key_points.forEach((point, index) => {\r\n              detailedText += `${index + 1}. ${point}\\n`;\r\n            });\r\n            detailedText += `\\n`;\r\n          }\r\n          \r\n          if (analysis.terms && analysis.terms.length > 0) {\r\n            detailedText += `**All Terms and Conditions:**\\n`;\r\n            analysis.terms.forEach((term, index) => {\r\n              detailedText += `${index + 1}. ${term}\\n`;\r\n            });\r\n            detailedText += `\\n`;\r\n          }\r\n          \r\n          if (analysis.actions && analysis.actions.length > 0) {\r\n            detailedText += `**All Required Actions:**\\n`;\r\n            analysis.actions.forEach((action, index) => {\r\n              detailedText += `${index + 1}. ${action}\\n`;\r\n            });\r\n          }\r\n        }\r\n      } else if (message.data.voyage_plan) {\r\n        const plan = message.data.voyage_plan;\r\n        \r\n        // Show all route options\r\n        if (plan.route_options && plan.route_options.length > 0) {\r\n          detailedText += `**All Route Options:**\\n`;\r\n          plan.route_options.forEach((route, index) => {\r\n            detailedText += `${index + 1}. **${route.name}**\\n`;\r\n            detailedText += `   â€¢ Distance: ${route.distance} NM\\n`;\r\n            detailedText += `   â€¢ Duration: ${route.duration} days\\n`;\r\n            detailedText += `   â€¢ Fuel: ${route.fuel_consumption} MT\\n`;\r\n            detailedText += `   â€¢ Canal: ${route.canal || 'None'}\\n`;\r\n            detailedText += `   â€¢ Advantages: ${route.advantages?.join(', ') || 'N/A'}\\n`;\r\n            detailedText += `   â€¢ Disadvantages: ${route.disadvantages?.join(', ') || 'N/A'}\\n\\n`;\r\n          });\r\n        }\r\n        \r\n        // Show all cost analysis\r\n        if (plan.cost_analysis) {\r\n          detailedText += `**Complete Cost Analysis:**\\n`;\r\n          Object.entries(plan.cost_analysis).forEach(([route, costs]) => {\r\n            if (typeof costs === 'object' && costs.total_cost) {\r\n              detailedText += `**${route}:**\\n`;\r\n              detailedText += `   â€¢ Total Cost: $${costs.total_cost?.toLocaleString() || 'N/A'}\\n`;\r\n              detailedText += `   â€¢ Fuel Cost: $${costs.fuel_cost?.toLocaleString() || 'N/A'}\\n`;\r\n              detailedText += `   â€¢ Canal Fee: $${costs.canal_fee?.toLocaleString() || 'N/A'}\\n`;\r\n              detailedText += `   â€¢ Port Charges: $${costs.port_charges?.toLocaleString() || 'N/A'}\\n`;\r\n              detailedText += `   â€¢ Cost per Day: $${costs.cost_per_day?.toLocaleString() || 'N/A'}\\n\\n`;\r\n            }\r\n          });\r\n        }\r\n        \r\n        // Show what-if scenarios\r\n        if (plan.what_if_scenarios && plan.what_if_scenarios.length > 0) {\r\n          detailedText += `**What-If Scenarios:**\\n`;\r\n          plan.what_if_scenarios.forEach((scenario, index) => {\r\n            detailedText += `${index + 1}. **${scenario.scenario}**\\n`;\r\n            if (scenario.impact) {\r\n              Object.entries(scenario.impact).forEach(([key, value]) => {\r\n                detailedText += `   â€¢ ${key.replace(/_/g, ' ').toUpperCase()}: ${value}\\n`;\r\n              });\r\n            }\r\n            if (scenario.recommendation) {\r\n              detailedText += `   â€¢ Recommendation: ${scenario.recommendation}\\n`;\r\n            }\r\n            detailedText += `\\n`;\r\n          });\r\n        }\r\n      }\r\n      \r\n      // Update the message with detailed text\r\n      message.text = detailedText;\r\n      message.hasDetailedData = false; // Hide the button after showing details\r\n      \r\n      // Force re-render\r\n      const updatedMessages = messages.map(msg => \r\n        msg.id === message.id ? message : msg\r\n      );\r\n      // Note: This would need to be passed down from parent component\r\n      // For now, we'll just show an alert with the details\r\n      alert('Full details:\\n\\n' + detailedText);\r\n    }\r\n  };\r\n\r\n  const getConfidenceClass = (confidence) => {\r\n    if (confidence >= 0.8) return 'confidence-high';\r\n    if (confidence >= 0.6) return 'confidence-medium';\r\n    return 'confidence-low';\r\n  };\r\n\r\n  const getIntentClass = (confidence) => {\r\n    if (confidence >= 0.8) return 'intent-high';\r\n    if (confidence >= 0.6) return 'intent-medium';\r\n    return 'intent-low';\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-window\">\r\n      {/* Messages Area */}\r\n      <div className=\"messages-area\">\r\n        {messages.length === 0 ? (\r\n          <div className=\"empty-state\">\r\n            <div className=\"empty-icon\">ğŸš¢</div>\r\n            <h3>Welcome to IME Hub Maritime AI</h3>\r\n            <p>Start a conversation to get maritime insights and assistance.</p>\r\n          </div>\r\n        ) : (\r\n          messages.map(renderMessage)\r\n        )}\r\n        \r\n        {isLoading && (\r\n          <div className=\"message-container agent-message\">\r\n            <div className=\"message-avatar\">ğŸ¤–</div>\r\n            <div className=\"message-content\">\r\n              <div className=\"message-header\">\r\n                <span className=\"message-sender\">{currentAgent || 'AI Assistant'}</span>\r\n              </div>\r\n              <div className=\"typing-indicator\">\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      {/* Input Area */}\r\n      <div className=\"input-area\">\r\n        <form onSubmit={handleSubmit} className=\"input-form\">\r\n          <div className=\"input-container\">\r\n            <textarea\r\n              ref={inputRef}\r\n              value={inputMessage}\r\n              onChange={(e) => setInputMessage(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              placeholder=\"Ask me anything about maritime operations, voyage planning, cargo matching, market insights, port intelligence, or PDA management...\"\r\n              className=\"message-input\"\r\n              rows={1}\r\n              disabled={isLoading}\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"send-button\"\r\n              disabled={!inputMessage.trim() || isLoading}\r\n            >\r\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M22 2L11 13\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                <path d=\"M22 2L15 22L11 13L2 9L22 2Z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"input-footer\">\r\n            <span className=\"input-hint\">\r\n              Press Enter to send, Shift+Enter for new line\r\n            </span>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}